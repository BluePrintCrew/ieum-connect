{"ast":null,"code":"import axios from 'axios';\nlet isUpdatingKeywords = false;\nexport const recommendKeywords = async prompt => {\n  if (isUpdatingKeywords) return [];\n  isUpdatingKeywords = true;\n  try {\n    const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n      model: 'gpt-4',\n      messages: [{\n        role: 'user',\n        content: prompt\n      }],\n      max_tokens: 50,\n      n: 1,\n      stop: null,\n      temperature: 0.7\n    }, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const chatGPTKeywords = response.data.choices[0].message.content.split(',').map(kw => kw.trim().replace(/^#+/, '')).filter(kw => kw !== '' && kw !== '\"');\n    return chatGPTKeywords;\n  } catch (error) {\n    console.error('키워드 추천 중 오류 발생:', error);\n    return [];\n  } finally {\n    isUpdatingKeywords = false;\n  }\n};\nexport const recommendKeywordsFromLabel = async label => {\n  return await recommendKeywords(`사용자가 이미지에서 '${label}' 객체를 감지하였습니다. 해당 객체와 관련된 한국어 해시태그 키워드 3개를 추천해 주세요.`);\n};\nexport const recommendKeywordsFromChatGPT = async () => {\n  return await recommendKeywords(\"이미지에서 탐지된 객체가 없으므로, 이 이미지는 풍경 사진일 가능성이 높습니다. 풍경 사진과 관련된 한국어 해시태그 키워드 3개를 추천해 주세요. 예를 들어, '자연', '여행', '풍경'과 같은 키워드를 추천해 주세요.\");\n};","map":{"version":3,"names":["axios","isUpdatingKeywords","recommendKeywords","prompt","response","post","model","messages","role","content","max_tokens","n","stop","temperature","headers","Authorization","process","env","REACT_APP_CHATGPT_API_KEY","chatGPTKeywords","data","choices","message","split","map","kw","trim","replace","filter","error","console","recommendKeywordsFromLabel","label","recommendKeywordsFromChatGPT"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/function/keywordRecommender.js"],"sourcesContent":["import axios from 'axios';\n\nlet isUpdatingKeywords = false;\n\nexport const recommendKeywords = async (prompt) => {\n  if (isUpdatingKeywords) return [];\n  isUpdatingKeywords = true;\n\n  try {\n    const response = await axios.post(\n      'https://api.openai.com/v1/chat/completions',\n      {\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'user',\n            content: prompt,\n          },\n        ],\n        max_tokens: 50,\n        n: 1,\n        stop: null,\n        temperature: 0.7,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    const chatGPTKeywords = response.data.choices[0].message.content\n      .split(',')\n      .map((kw) => kw.trim().replace(/^#+/, ''))\n      .filter((kw) => kw !== '' && kw !== '\"');\n\n    return chatGPTKeywords;\n  } catch (error) {\n    console.error('키워드 추천 중 오류 발생:', error);\n    return [];\n  } finally {\n    isUpdatingKeywords = false;\n  }\n};\n\nexport const recommendKeywordsFromLabel = async (label) => {\n  return await recommendKeywords(\n    `사용자가 이미지에서 '${label}' 객체를 감지하였습니다. 해당 객체와 관련된 한국어 해시태그 키워드 3개를 추천해 주세요.`\n  );\n};\n\nexport const recommendKeywordsFromChatGPT = async () => {\n  return await recommendKeywords(\n    \"이미지에서 탐지된 객체가 없으므로, 이 이미지는 풍경 사진일 가능성이 높습니다. 풍경 사진과 관련된 한국어 해시태그 키워드 3개를 추천해 주세요. 예를 들어, '자연', '여행', '풍경'과 같은 키워드를 추천해 주세요.\"\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,kBAAkB,GAAG,KAAK;AAE9B,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EACjD,IAAIF,kBAAkB,EAAE,OAAO,EAAE;EACjCA,kBAAkB,GAAG,IAAI;EAEzB,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,4CAA4C,EAC5C;MACEC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEN;MACX,CAAC,CACF;MACDO,UAAU,EAAE,EAAE;MACdC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC,EACD;MACEC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,OAAO,CAACC,GAAG,CAACC,yBAAyB,EAAE;QAChE,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,MAAMC,eAAe,GAAGf,QAAQ,CAACgB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACb,OAAO,CAC7Dc,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CACzCC,MAAM,CAAEH,EAAE,IAAKA,EAAE,KAAK,EAAE,IAAIA,EAAE,KAAK,GAAG,CAAC;IAE1C,OAAON,eAAe;EACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO,EAAE;EACX,CAAC,SAAS;IACR5B,kBAAkB,GAAG,KAAK;EAC5B;AACF,CAAC;AAED,OAAO,MAAM8B,0BAA0B,GAAG,MAAOC,KAAK,IAAK;EACzD,OAAO,MAAM9B,iBAAiB,CAC5B,eAAe8B,KAAK,qDACtB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,4BAA4B,GAAG,MAAAA,CAAA,KAAY;EACtD,OAAO,MAAM/B,iBAAiB,CAC5B,6HACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}