{"ast":null,"code":"var _jsxFileName = \"/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryRecord = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [isDroppableLoaded, setIsDroppableLoaded] = useState(false);\n  const [model, setModel] = useState(null);\n  const navigate = useNavigate();\n  const isUpdatingKeywords = useRef(false);\n  const detectedLabelsSet = useRef(new Set());\n  useEffect(() => {\n    const loadModel = async () => {\n      const loadedModel = await cocoSsd.load();\n      setModel(loadedModel);\n    };\n    loadModel();\n  }, []);\n  useEffect(() => {\n    if (markers.length > 0) {\n      setIsDroppableLoaded(true);\n    }\n  }, [markers]);\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files).filter(file => file.type === 'image/jpeg');\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map(file => URL.createObjectURL(file))]);\n      files.forEach(file => extractExifData(file, addMarkerFromExif));\n      files.forEach(file => detectObjectsInImage(file));\n    }\n  };\n  const addMarkerFromExif = data => {\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, address => {\n        const newMarker = {\n          lat: data.latitude,\n          lng: data.longitude,\n          date: data.dateTime,\n          address\n        };\n        setMarkers(prevMarkers => [...prevMarkers, newMarker]);\n        setAddresses(prevAddresses => [...prevAddresses, address]);\n      });\n    }\n  };\n  const detectObjectsInImage = async file => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        if (predictions.length === 0) {\n          console.log('객체가 없음: 배경 이미지로 간주하여 ChatGPT에 요청합니다.');\n          await recommendKeywordsFromChatGPT(file);\n        } else {\n          predictions = predictions.slice(0, 2);\n          const newLabels = predictions.map(prediction => prediction.class).filter(label => !detectedLabelsSet.current.has(label));\n          newLabels.forEach(label => detectedLabelsSet.current.add(label));\n          for (const label of newLabels) {\n            await recommendKeywordsFromLabel(label);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n  };\n  const recommendKeywordsFromLabel = async label => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4',\n        messages: [{\n          role: 'user',\n          content: `\n              \"당신은 객체 '${label}'와 관련된 재미있고 유용한 한국어 해시태그 3개를 추천합니다.\"\n              `\n        }],\n        max_tokens: 50,\n        n: 1,\n        stop: null,\n        temperature: 0.7\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const chatGPTKeywords = response.data.choices[0].message.content.split(',').map(kw => kw.trim().replace(/^#+/, '')).filter(kw => kw !== '' && kw !== '\"');\n      setRecommendedKeywords(prevKeywords => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n  const recommendKeywordsFromChatGPT = async file => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4',\n        messages: [{\n          role: 'user',\n          content: `\n              \"배경 이미지와 관련된 재미있고 유용한 한국어 해시태그 3개를 추천합니다.\"\n              `\n        }],\n        max_tokens: 50,\n        n: 1,\n        stop: null,\n        temperature: 0.7\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const chatGPTKeywords = response.data.choices[0].message.content.split(',').map(kw => kw.trim().replace(/^#+/, '')).filter(kw => kw !== '' && kw !== '\"');\n      setRecommendedKeywords(prevKeywords => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('배경 이미지 키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n  const handleSubmit = async () => {\n    const routePoints = markers.map((marker, index) => ({\n      latitude: marker.lat,\n      longitude: marker.lng,\n      orderNum: index + 1\n    }));\n    const storyInfo = {\n      title,\n      memo,\n      preference,\n      hashtags,\n      routePoints\n    };\n    const formData = new FormData();\n    formData.append('storyInfo', new Blob([JSON.stringify(storyInfo)], {\n      type: 'application/json'\n    }));\n    selectedFiles.forEach(file => {\n      formData.append('images', file);\n    });\n    try {\n      const response = await axios.post('http://localhost:8080/api/stories', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        console.log('스토리 생성 성공:', response.data);\n        navigate('/stories');\n      }\n    } catch (error) {\n      console.error('스토리 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storyrecord-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"storyrecord-title\",\n      children: \"\\uC2A4\\uD1A0\\uB9AC \\uAE30\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      className: \"title-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `map-container ${isSpotAdding ? 'spot-adding' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(KakaoMap, {\n        isSpotAdding: isSpotAdding,\n        markers: markers,\n        setMarkers: setMarkers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSpotAdding(!isSpotAdding),\n      className: `toggle-spot-button ${isSpotAdding ? 'active' : ''}`,\n      children: isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: `썸네일 ${index + 1}`,\n        className: \"image-preview\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg\",\n        multiple: true,\n        onChange: handleFileChange,\n        id: \"fileUpload\",\n        className: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileUpload\",\n        className: \"upload-label\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n      value: memo,\n      onChange: e => setMemo(e.target.value),\n      className: \"memo-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD574\\uC2DC\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: hashtagInput,\n      onChange: e => setHashtagInput(e.target.value),\n      onKeyPress: e => {\n        if (e.key === 'Enter' && hashtagInput.trim()) {\n          setHashtags([...hashtags, hashtagInput.trim()]);\n          setHashtagInput('');\n        }\n      },\n      className: \"hashtag-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hashtag-container\",\n      children: hashtags.map((hashtag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hashtag\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `#${hashtag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHashtags(hashtags.filter((_, i) => i !== index)),\n          className: \"hashtag-remove\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryRecord, \"Z3ZZfrnyRVFP5T3qq77SSp+pNRU=\", false, function () {\n  return [useNavigate];\n});\n_c = StoryRecord;\nexport default StoryRecord;\nvar _c;\n$RefreshReg$(_c, \"StoryRecord\");","map":{"version":3,"names":["React","useState","useEffect","useRef","KakaoMap","extractExifData","getAddressFromCoords","DragDropContext","Droppable","Draggable","useNavigate","FooterNav","axios","tf","cocoSsd","jsxDEV","_jsxDEV","StoryRecord","_s","title","setTitle","memo","setMemo","selectedFiles","setSelectedFiles","imagePreviews","setImagePreviews","preference","setPreference","hashtagInput","setHashtagInput","hashtags","setHashtags","recommendedKeywords","setRecommendedKeywords","isSpotAdding","setIsSpotAdding","markers","setMarkers","addresses","setAddresses","isDroppableLoaded","setIsDroppableLoaded","model","setModel","navigate","isUpdatingKeywords","detectedLabelsSet","Set","loadModel","loadedModel","load","length","handleFileChange","e","files","Array","from","target","filter","file","type","map","URL","createObjectURL","forEach","addMarkerFromExif","detectObjectsInImage","data","latitude","longitude","address","newMarker","lat","lng","date","dateTime","prevMarkers","prevAddresses","console","error","img","Image","src","onload","predictions","detect","log","recommendKeywordsFromChatGPT","slice","newLabels","prediction","class","label","current","has","add","recommendKeywordsFromLabel","response","post","messages","role","content","max_tokens","n","stop","temperature","headers","Authorization","process","env","REACT_APP_CHATGPT_API_KEY","chatGPTKeywords","choices","message","split","kw","trim","replace","prevKeywords","handleSubmit","routePoints","marker","index","orderNum","storyInfo","formData","FormData","append","Blob","JSON","stringify","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","preview","alt","accept","multiple","id","htmlFor","onKeyPress","key","hashtag","_","i","_c","$RefreshReg$"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\n\nconst StoryRecord = () => {\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [isDroppableLoaded, setIsDroppableLoaded] = useState(false);\n  const [model, setModel] = useState(null);\n  const navigate = useNavigate();\n  const isUpdatingKeywords = useRef(false);\n  const detectedLabelsSet = useRef(new Set());\n\n  useEffect(() => {\n    const loadModel = async () => {\n      const loadedModel = await cocoSsd.load();\n      setModel(loadedModel);\n    };\n    loadModel();\n  }, []);\n\n  useEffect(() => {\n    if (markers.length > 0) {\n      setIsDroppableLoaded(true);\n    }\n  }, [markers]);\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files).filter((file) => file.type === 'image/jpeg');\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map((file) => URL.createObjectURL(file))]);\n      files.forEach((file) => extractExifData(file, addMarkerFromExif));\n      files.forEach((file) => detectObjectsInImage(file));\n    }\n  };\n\n  const addMarkerFromExif = (data) => {\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, (address) => {\n        const newMarker = { lat: data.latitude, lng: data.longitude, date: data.dateTime, address };\n        setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\n        setAddresses((prevAddresses) => [...prevAddresses, address]);\n      });\n    }\n  };\n\n  const detectObjectsInImage = async (file) => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        if (predictions.length === 0) {\n          console.log('객체가 없음: 배경 이미지로 간주하여 ChatGPT에 요청합니다.');\n          await recommendKeywordsFromChatGPT(file);\n        } else {\n          predictions = predictions.slice(0, 2);\n          const newLabels = predictions\n            .map((prediction) => prediction.class)\n            .filter((label) => !detectedLabelsSet.current.has(label));\n\n          newLabels.forEach((label) => detectedLabelsSet.current.add(label));\n          for (const label of newLabels) {\n            await recommendKeywordsFromLabel(label);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n  };\n\n  const recommendKeywordsFromLabel = async (label) => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-4',\n          messages: [\n            {\n              role: 'user',\n              content: `\n              \"당신은 객체 '${label}'와 관련된 재미있고 유용한 한국어 해시태그 3개를 추천합니다.\"\n              `\n            }\n          ],\n          max_tokens: 50,\n          n: 1,\n          stop: null,\n          temperature: 0.7,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      const chatGPTKeywords = response.data.choices[0].message.content\n        .split(',')\n        .map((kw) => kw.trim().replace(/^#+/, ''))\n        .filter((kw) => kw !== '' && kw !== '\"');\n\n      setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n\n  const recommendKeywordsFromChatGPT = async (file) => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-4',\n          messages: [\n            {\n              role: 'user',\n              content: `\n              \"배경 이미지와 관련된 재미있고 유용한 한국어 해시태그 3개를 추천합니다.\"\n              `\n            }\n          ],\n          max_tokens: 50,\n          n: 1,\n          stop: null,\n          temperature: 0.7,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      const chatGPTKeywords = response.data.choices[0].message.content\n        .split(',')\n        .map((kw) => kw.trim().replace(/^#+/, ''))\n        .filter((kw) => kw !== '' && kw !== '\"');\n\n      setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('배경 이미지 키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n\n  const handleSubmit = async () => {\n    const routePoints = markers.map((marker, index) => ({\n      latitude: marker.lat,\n      longitude: marker.lng,\n      orderNum: index + 1,\n    }));\n\n    const storyInfo = {\n      title,\n      memo,\n      preference,\n      hashtags,\n      routePoints,\n    };\n\n    const formData = new FormData();\n    formData.append('storyInfo', new Blob([JSON.stringify(storyInfo)], { type: 'application/json' }));\n    selectedFiles.forEach((file) => {\n      formData.append('images', file);\n    });\n\n    try {\n      const response = await axios.post('http://localhost:8080/api/stories', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (response.status === 200) {\n        console.log('스토리 생성 성공:', response.data);\n        navigate('/stories');\n      }\n    } catch (error) {\n      console.error('스토리 제출 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div className=\"storyrecord-container\">\n      <h1 className=\"storyrecord-title\">스토리 기록하기</h1>\n      {/* 제목 입력 */}\n      <input\n        type=\"text\"\n        placeholder=\"제목을 입력하세요\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        className=\"title-input\"\n      />\n      {/* 지도 */}\n      <div className={`map-container ${isSpotAdding ? 'spot-adding' : ''}`}>\n        <KakaoMap isSpotAdding={isSpotAdding} markers={markers} setMarkers={setMarkers} />\n      </div>\n      <button onClick={() => setIsSpotAdding(!isSpotAdding)} className={`toggle-spot-button ${isSpotAdding ? 'active' : ''}`}>\n        {isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'}\n      </button>\n      {/* 이미지 업로드 */}\n      <div className=\"image-preview-container\">\n        {imagePreviews.map((preview, index) => (\n          <img key={index} src={preview} alt={`썸네일 ${index + 1}`} className=\"image-preview\" />\n        ))}\n        <input\n          type=\"file\"\n          accept=\"image/jpeg\"\n          multiple\n          onChange={handleFileChange}\n          id=\"fileUpload\"\n          className=\"file-upload\"\n        />\n        <label htmlFor=\"fileUpload\" className=\"upload-label\">+</label>\n      </div>\n      {/* 메모 입력 */}\n      <textarea\n        placeholder=\"메모를 입력하세요...\"\n        value={memo}\n        onChange={(e) => setMemo(e.target.value)}\n        className=\"memo-textarea\"\n      />\n      {/* 해시태그 */}\n      <input\n        type=\"text\"\n        placeholder=\"해시태그를 입력하세요\"\n        value={hashtagInput}\n        onChange={(e) => setHashtagInput(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === 'Enter' && hashtagInput.trim()) {\n            setHashtags([...hashtags, hashtagInput.trim()]);\n            setHashtagInput('');\n          }\n        }}\n        className=\"hashtag-input\"\n      />\n      <div className=\"hashtag-container\">\n        {hashtags.map((hashtag, index) => (\n          <div key={index} className=\"hashtag\">\n            <span>{`#${hashtag}`}</span>\n            <button onClick={() => setHashtags(hashtags.filter((_, i) => i !== index))} className=\"hashtag-remove\">\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleSubmit} className=\"submit-button\">완료</button>\n      <FooterNav />\n    </div>\n  );\n};\n\nexport default StoryRecord;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}