{"ast":null,"code":"var _jsxFileName = \"/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/KakaoCallback.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoCallback = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 현재 URL에서 인증 코드를 가져옵니다.\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      // 인증 코드를 백엔드로 전송하여 액세스 토큰을 요청합니다.\n      axios.post('/api/kakao/callback', {\n        code\n      }).then(response => {\n        // 로그인 성공 처리\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // 홈 화면으로 리디렉트\n        navigate('/');\n      }).catch(error => {\n        console.error('카카오 로그인 실패:', error);\n        // 로그인 실패 시 처리 (예: 에러 메시지 출력)\n      });\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_s(KakaoCallback, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = KakaoCallback;\nexport default KakaoCallback;\nvar _c;\n$RefreshReg$(_c, \"KakaoCallback\");","map":{"version":3,"names":["useEffect","useNavigate","axios","jsxDEV","_jsxDEV","KakaoCallback","_s","navigate","urlParams","URLSearchParams","window","location","search","code","get","post","then","response","token","user","data","localStorage","setItem","JSON","stringify","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/KakaoCallback.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst KakaoCallback = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 현재 URL에서 인증 코드를 가져옵니다.\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n\n    if (code) {\n      // 인증 코드를 백엔드로 전송하여 액세스 토큰을 요청합니다.\n      axios.post('/api/kakao/callback', { code })\n        .then(response => {\n          // 로그인 성공 처리\n          const { token, user } = response.data;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user', JSON.stringify(user));\n\n          // 홈 화면으로 리디렉트\n          navigate('/');\n        })\n        .catch(error => {\n          console.error('카카오 로그인 실패:', error);\n          // 로그인 실패 시 처리 (예: 에러 메시지 출력)\n        });\n    }\n  }, [navigate]);\n\n  return <div>카카오 로그인 중...</div>;\n};\n\nexport default KakaoCallback;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,IAAI,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;IAElC,IAAID,IAAI,EAAE;MACR;MACAX,KAAK,CAACa,IAAI,CAAC,qBAAqB,EAAE;QAAEF;MAAK,CAAC,CAAC,CACxCG,IAAI,CAACC,QAAQ,IAAI;QAChB;QACA,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGF,QAAQ,CAACG,IAAI;QACrCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;QACpCG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;;QAElD;QACAZ,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC;MACF,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAwB,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChC,CAAC;AAAC1B,EAAA,CA5BID,aAAa;EAAA,QACAJ,WAAW;AAAA;AAAAgC,EAAA,GADxB5B,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}