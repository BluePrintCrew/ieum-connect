{"ast":null,"code":"var _jsxFileName = \"/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/Kakao/KakaoMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoMap = ({\n  center,\n  isSpotAdding,\n  markers,\n  setMarkers\n}) => {\n  _s();\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [map, setMap] = useState(null);\n\n  // Kakao Map API 스크립트 로드 및 맵 로드 후 상태 업데이트\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_APP_API_KEY}&autoload=false&libraries=services`;\n    script.async = true;\n    script.onload = () => {\n      if (window.kakao && window.kakao.maps) {\n        window.kakao.maps.load(() => setIsMapLoaded(true));\n      } else {\n        console.error('카카오 맵 스크립트 로딩 실패');\n      }\n    };\n    document.head.appendChild(script);\n    return () => document.head.removeChild(script);\n  }, []);\n\n  // 맵이 로드된 후 지도와 마커 관련 작업을 수행하는 useEffect\n  useEffect(() => {\n    if (isMapLoaded) {\n      const mapContainer = document.getElementById('map');\n      const mapOption = {\n        center: new window.kakao.maps.LatLng((center === null || center === void 0 ? void 0 : center.lat) || 37.2838, (center === null || center === void 0 ? void 0 : center.lng) || 127.0454),\n        // 전달받은 중심 좌표 설정, 없을 경우 아주대학교 좌표 사용\n        level: 5\n      };\n      const createdMap = new window.kakao.maps.Map(mapContainer, mapOption);\n      setMap(createdMap);\n\n      // 지도 클릭 시 마커 추가 기능\n      if (isSpotAdding) {\n        window.kakao.maps.event.addListener(createdMap, 'click', mouseEvent => {\n          const latlng = mouseEvent.latLng;\n          const newMarker = {\n            lat: latlng.getLat(),\n            lng: latlng.getLng()\n          };\n          setMarkers(prevMarkers => [...prevMarkers, newMarker]);\n          const marker = new window.kakao.maps.Marker({\n            position: latlng,\n            map: createdMap\n          });\n          window.kakao.maps.event.addListener(marker, 'click', () => {\n            marker.setMap(null);\n            setMarkers(prevMarkers => prevMarkers.filter(m => m.lat !== newMarker.lat || m.lng !== newMarker.lng));\n          });\n        });\n      }\n\n      // 기존 마커 추가\n      markers.forEach(marker => {\n        const markerPosition = new window.kakao.maps.LatLng(marker.lat, marker.lng);\n        new window.kakao.maps.Marker({\n          map: createdMap,\n          position: markerPosition\n        });\n      });\n\n      // 경로 표시 - 마커가 두 개 이상일 때만 수행\n      if (markers.length > 1) {\n        for (let i = 0; i < markers.length - 1; i++) {\n          const start = markers[i];\n          const end = markers[i + 1];\n          getWalkingRouteFromTmap(start, end, createdMap);\n        }\n      }\n    }\n  }, [isMapLoaded, markers, isSpotAdding, center]);\n\n  // Tmap API를 통해 도보 경로 데이터를 가져오는 함수\n  const getWalkingRouteFromTmap = (start, end, map) => {\n    const url = `https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json`;\n    axios.post(url, {\n      startX: start.lng,\n      startY: start.lat,\n      endX: end.lng,\n      endY: end.lat,\n      reqCoordType: 'WGS84GEO',\n      resCoordType: 'WGS84GEO',\n      startName: '출발지',\n      endName: '도착지'\n    }, {\n      headers: {\n        appKey: process.env.REACT_APP_TMAP_API_KEY\n      }\n    }).then(response => {\n      const resultData = response.data.features;\n      const points = [];\n      resultData.forEach(feature => {\n        if (feature.geometry.type === 'LineString') {\n          feature.geometry.coordinates.forEach(coordinate => {\n            points.push(new window.kakao.maps.LatLng(coordinate[1], coordinate[0]));\n          });\n        }\n      });\n      if (points.length > 0) {\n        const polyline = new window.kakao.maps.Polyline({\n          path: points,\n          strokeWeight: 5,\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.7,\n          strokeStyle: 'solid'\n        });\n        polyline.setMap(map);\n      } else {\n        console.warn('Tmap에서 경로 데이터를 가져오지 못했습니다.');\n      }\n    }).catch(error => {\n      console.error('Tmap 도보 경로 요청에 실패했습니다:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n};\n_s(KakaoMap, \"e1TStJ6ldY0QsFRF+PHz9gU8aI8=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","KakaoMap","center","isSpotAdding","markers","setMarkers","_s","isMapLoaded","setIsMapLoaded","map","setMap","script","document","createElement","src","process","env","REACT_APP_KAKAO_APP_API_KEY","async","onload","window","kakao","maps","load","console","error","head","appendChild","removeChild","mapContainer","getElementById","mapOption","LatLng","lat","lng","level","createdMap","Map","event","addListener","mouseEvent","latlng","latLng","newMarker","getLat","getLng","prevMarkers","marker","Marker","position","filter","m","forEach","markerPosition","length","i","start","end","getWalkingRouteFromTmap","url","post","startX","startY","endX","endY","reqCoordType","resCoordType","startName","endName","headers","appKey","REACT_APP_TMAP_API_KEY","then","response","resultData","data","features","points","feature","geometry","type","coordinates","coordinate","push","polyline","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","warn","catch","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/Kakao/KakaoMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst KakaoMap = ({ center, isSpotAdding, markers, setMarkers }) => {\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [map, setMap] = useState(null);\n\n  // Kakao Map API 스크립트 로드 및 맵 로드 후 상태 업데이트\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_APP_API_KEY}&autoload=false&libraries=services`;\n    script.async = true;\n\n    script.onload = () => {\n      if (window.kakao && window.kakao.maps) {\n        window.kakao.maps.load(() => setIsMapLoaded(true));\n      } else {\n        console.error('카카오 맵 스크립트 로딩 실패');\n      }\n    };\n    document.head.appendChild(script);\n    return () => document.head.removeChild(script);\n  }, []);\n\n  // 맵이 로드된 후 지도와 마커 관련 작업을 수행하는 useEffect\n  useEffect(() => {\n    if (isMapLoaded) {\n      const mapContainer = document.getElementById('map');\n      const mapOption = {\n        center: new window.kakao.maps.LatLng(center?.lat || 37.2838, center?.lng || 127.0454), // 전달받은 중심 좌표 설정, 없을 경우 아주대학교 좌표 사용\n        level: 5,\n      };\n      const createdMap = new window.kakao.maps.Map(mapContainer, mapOption);\n      setMap(createdMap);\n\n      // 지도 클릭 시 마커 추가 기능\n      if (isSpotAdding) {\n        window.kakao.maps.event.addListener(createdMap, 'click', (mouseEvent) => {\n          const latlng = mouseEvent.latLng;\n          const newMarker = { lat: latlng.getLat(), lng: latlng.getLng() };\n          setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\n\n          const marker = new window.kakao.maps.Marker({ position: latlng, map: createdMap });\n          window.kakao.maps.event.addListener(marker, 'click', () => {\n            marker.setMap(null);\n            setMarkers((prevMarkers) => prevMarkers.filter((m) => m.lat !== newMarker.lat || m.lng !== newMarker.lng));\n          });\n        });\n      }\n\n      // 기존 마커 추가\n      markers.forEach((marker) => {\n        const markerPosition = new window.kakao.maps.LatLng(marker.lat, marker.lng);\n        new window.kakao.maps.Marker({\n          map: createdMap,\n          position: markerPosition,\n        });\n      });\n\n      // 경로 표시 - 마커가 두 개 이상일 때만 수행\n      if (markers.length > 1) {\n        for (let i = 0; i < markers.length - 1; i++) {\n          const start = markers[i];\n          const end = markers[i + 1];\n          getWalkingRouteFromTmap(start, end, createdMap);\n        }\n      }\n    }\n  }, [isMapLoaded, markers, isSpotAdding, center]);\n\n  // Tmap API를 통해 도보 경로 데이터를 가져오는 함수\n  const getWalkingRouteFromTmap = (start, end, map) => {\n    const url = `https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json`;\n\n    axios\n      .post(\n        url,\n        {\n          startX: start.lng,\n          startY: start.lat,\n          endX: end.lng,\n          endY: end.lat,\n          reqCoordType: 'WGS84GEO',\n          resCoordType: 'WGS84GEO',\n          startName: '출발지',\n          endName: '도착지',\n        },\n        {\n          headers: {\n            appKey: process.env.REACT_APP_TMAP_API_KEY,\n          },\n        }\n      )\n      .then((response) => {\n        const resultData = response.data.features;\n        const points = [];\n\n        resultData.forEach((feature) => {\n          if (feature.geometry.type === 'LineString') {\n            feature.geometry.coordinates.forEach((coordinate) => {\n              points.push(new window.kakao.maps.LatLng(coordinate[1], coordinate[0]));\n            });\n          }\n        });\n\n        if (points.length > 0) {\n          const polyline = new window.kakao.maps.Polyline({\n            path: points,\n            strokeWeight: 5,\n            strokeColor: '#FF0000',\n            strokeOpacity: 0.7,\n            strokeStyle: 'solid',\n          });\n          polyline.setMap(map);\n        } else {\n          console.warn('Tmap에서 경로 데이터를 가져오지 못했습니다.');\n        }\n      })\n      .catch((error) => {\n        console.error('Tmap 도보 경로 요청에 실패했습니다:', error);\n      });\n  };\n\n  return <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>;\n};\n\nexport default KakaoMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}