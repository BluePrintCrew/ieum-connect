{"ast":null,"code":"export const getAddressFromCoords = (latitude, longitude, callback) => {\n  // Kakao 지도 API가 로드되었는지 확인\n  if (window.kakao && window.kakao.maps && window.kakao.maps.services) {\n    const geocoder = new window.kakao.maps.services.Geocoder();\n    const coords = new window.kakao.maps.LatLng(latitude, longitude);\n    geocoder.coord2Address(coords.getLng(), coords.getLat(), (result, status) => {\n      if (status === window.kakao.maps.services.Status.OK) {\n        var _result$, _result$$road_address, _result$2, _result$2$address;\n        const address = ((_result$ = result[0]) === null || _result$ === void 0 ? void 0 : (_result$$road_address = _result$.road_address) === null || _result$$road_address === void 0 ? void 0 : _result$$road_address.address_name) || ((_result$2 = result[0]) === null || _result$2 === void 0 ? void 0 : (_result$2$address = _result$2.address) === null || _result$2$address === void 0 ? void 0 : _result$2$address.address_name);\n        callback(address);\n      } else {\n        console.error('Failed to get address from coordinates');\n        callback(null);\n      }\n    });\n  } else {\n    console.error('Kakao Maps API is not loaded yet');\n    callback(null);\n  }\n};","map":{"version":3,"names":["getAddressFromCoords","latitude","longitude","callback","window","kakao","maps","services","geocoder","Geocoder","coords","LatLng","coord2Address","getLng","getLat","result","status","Status","OK","_result$","_result$$road_address","_result$2","_result$2$address","address","road_address","address_name","console","error"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/function/kakaoGeocoder.js"],"sourcesContent":["export const getAddressFromCoords = (latitude, longitude, callback) => {\n  // Kakao 지도 API가 로드되었는지 확인\n  if (window.kakao && window.kakao.maps && window.kakao.maps.services) {\n    const geocoder = new window.kakao.maps.services.Geocoder();\n    const coords = new window.kakao.maps.LatLng(latitude, longitude);\n\n    geocoder.coord2Address(coords.getLng(), coords.getLat(), (result, status) => {\n      if (status === window.kakao.maps.services.Status.OK) {\n        const address = result[0]?.road_address?.address_name || result[0]?.address?.address_name;\n        callback(address);\n      } else {\n        console.error('Failed to get address from coordinates');\n        callback(null);\n      }\n    });\n  } else {\n    console.error('Kakao Maps API is not loaded yet');\n    callback(null);\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EACrE;EACA,IAAIC,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,CAACC,IAAI,IAAIF,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,EAAE;IACnE,MAAMC,QAAQ,GAAG,IAAIJ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACE,QAAQ,CAAC,CAAC;IAC1D,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACC,KAAK,CAACC,IAAI,CAACK,MAAM,CAACV,QAAQ,EAAEC,SAAS,CAAC;IAEhEM,QAAQ,CAACI,aAAa,CAACF,MAAM,CAACG,MAAM,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,CAAC,CAAC,EAAE,CAACC,MAAM,EAAEC,MAAM,KAAK;MAC3E,IAAIA,MAAM,KAAKZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACU,MAAM,CAACC,EAAE,EAAE;QAAA,IAAAC,QAAA,EAAAC,qBAAA,EAAAC,SAAA,EAAAC,iBAAA;QACnD,MAAMC,OAAO,GAAG,EAAAJ,QAAA,GAAAJ,MAAM,CAAC,CAAC,CAAC,cAAAI,QAAA,wBAAAC,qBAAA,GAATD,QAAA,CAAWK,YAAY,cAAAJ,qBAAA,uBAAvBA,qBAAA,CAAyBK,YAAY,OAAAJ,SAAA,GAAIN,MAAM,CAAC,CAAC,CAAC,cAAAM,SAAA,wBAAAC,iBAAA,GAATD,SAAA,CAAWE,OAAO,cAAAD,iBAAA,uBAAlBA,iBAAA,CAAoBG,YAAY;QACzFtB,QAAQ,CAACoB,OAAO,CAAC;MACnB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;QACvDxB,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACLuB,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;IACjDxB,QAAQ,CAAC,IAAI,CAAC;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}