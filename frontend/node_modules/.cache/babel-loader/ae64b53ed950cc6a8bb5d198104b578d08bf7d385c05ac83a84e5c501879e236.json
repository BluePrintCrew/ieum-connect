{"ast":null,"code":"var _jsxFileName = \"/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryRecord = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [isDroppableLoaded, setIsDroppableLoaded] = useState(false);\n  const [model, setModel] = useState(null);\n  const navigate = useNavigate();\n  const isUpdatingKeywords = useRef(false);\n  const detectedLabelsSet = useRef(new Set());\n  useEffect(() => {\n    const loadModel = async () => {\n      const loadedModel = await cocoSsd.load();\n      setModel(loadedModel);\n    };\n    loadModel();\n  }, []);\n  useEffect(() => {\n    if (markers.length > 0) {\n      setIsDroppableLoaded(true);\n    }\n  }, [markers]);\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files).filter(file => file.type === 'image/jpeg');\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map(file => URL.createObjectURL(file))]);\n      files.forEach(file => extractExifData(file, addMarkerFromExif));\n      files.forEach(file => detectObjectsInImage(file));\n    }\n  };\n  const addMarkerFromExif = data => {\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, address => {\n        const newMarker = {\n          lat: data.latitude,\n          lng: data.longitude,\n          date: data.dateTime,\n          address\n        };\n        setMarkers(prevMarkers => [...prevMarkers, newMarker]);\n        setAddresses(prevAddresses => [...prevAddresses, address]);\n      });\n    }\n  };\n\n  // 이미지에서 객체를 감지하는 함수\n  const detectObjectsInImage = async file => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        if (predictions.length === 0) {\n          // 객체가 없는 경우 ChatGPT API를 사용하여 키워드 추천\n          console.log('객체가 없음: 배경 이미지로 간주하여 ChatGPT에 요청합니다.');\n          await recommendKeywordsFromChatGPT(file);\n        } else {\n          predictions = predictions.slice(0, 2); // 최대 2개의 객체만 탐지\n          const newLabels = predictions.map(prediction => prediction.class).filter(label => !detectedLabelsSet.current.has(label));\n          newLabels.forEach(label => detectedLabelsSet.current.add(label));\n          console.log(\"감지된 객체:\", newLabels);\n\n          // ChatGPT API를 이용해 추가적인 키워드 추천\n          for (const label of newLabels) {\n            await recommendKeywordsFromLabel(label);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n  };\n\n  // ChatGPT API를 사용하여 객체 라벨 기반 키워드 추천\n  const recommendKeywordsFromLabel = async label => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4',\n        messages: [{\n          role: 'user',\n          content: `\n              \"당신은 재미있고 유행하는 키워드를 추천하는 어시스턴트입니다. 사용자가 이미지에서 특정 객체를 감지하면, 해당 객체 '${label}'와 관련된 한국어 해시태그 키워드 3개를 추천합니다. 예를 들어, '케이크'를 감지하면 '카페', '케이크맛집', '데이트장소'와 같은 사람들이 자주 사용하는 재미있고 유용한 단어를 제공합니다. 각 단어는 쉼표로 구분하여 한 줄로 작성하세요.\"\n              `\n        }],\n        max_tokens: 50,\n        n: 1,\n        stop: null,\n        temperature: 0.7\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const chatGPTKeywords = response.data.choices[0].message.content.split(',').map(kw => kw.trim().replace(/^#+/, '')) // 모든 기존 해시태그 제거\n      .filter(kw => kw !== '' && kw !== '\"'); // 빈 문자열 및 따옴표 제거\n\n      setRecommendedKeywords(prevKeywords => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n\n  // ChatGPT API를 사용하여 배경 이미지 기반 키워드 추천\n  const recommendKeywordsFromChatGPT = async file => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4',\n        messages: [{\n          role: 'user',\n          content: `\n              \"이미지에서 감지된 객체가 없는 경우, 사용자가 제공한 배경 이미지에 대해 한국어로 적절한 해시태그 키워드 3개를 추천합니다. 예를 들어, 자연 풍경 이미지를 보면 '힐링', '자연여행', '풍경사진'과 같은 사람들이 자주 사용하는 단어를 제공합니다. 각 단어는 쉼표로 구분하여 한 줄로 작성하세요.\"\n              `\n        }],\n        max_tokens: 50,\n        n: 1,\n        stop: null,\n        temperature: 0.7\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const chatGPTKeywords = response.data.choices[0].message.content.split(',').map(kw => kw.trim().replace(/^#+/, '')) // 모든 기존 해시태그 제거\n      .filter(kw => kw !== '' && kw !== '\"' && kw !== '\\''); // 빈 문자열 및 따옴표 제거\n\n      setRecommendedKeywords(prevKeywords => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('배경 이미지 키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n  const handleTitleChange = e => setTitle(e.target.value);\n  const handleMemoChange = e => setMemo(e.target.value);\n  const handlePreferenceChange = newPreference => setPreference(newPreference);\n  const handleHashtagChange = e => setHashtagInput(e.target.value);\n  const handleHashtagKeyPress = e => {\n    if (e.key === 'Enter' && hashtagInput.trim() !== '') {\n      setHashtags([...hashtags, hashtagInput.trim()]);\n      setHashtagInput('');\n    }\n  };\n  const addRecommendedKeyword = keyword => {\n    const cleanedKeyword = keyword.replace(/^#+/, '').trim();\n    const formattedKeyword = `${cleanedKeyword}`;\n    if (!hashtags.includes(formattedKeyword)) {\n      setHashtags([...hashtags, formattedKeyword]);\n    }\n  };\n  const removeHashtag = indexToRemove => setHashtags(hashtags.filter((_, index) => index !== indexToRemove));\n  const toggleSpotAdding = () => setIsSpotAdding(!isSpotAdding);\n  const handleSubmit = () => {\n    console.log({\n      title,\n      selectedFiles,\n      memo,\n      preference,\n      hashtags,\n      markers,\n      addresses\n    });\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const updatedMarkers = Array.from(markers);\n    const [reorderedMarker] = updatedMarkers.splice(result.source.index, 1);\n    updatedMarkers.splice(result.destination.index, 0, reorderedMarker);\n    setMarkers(updatedMarkers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storyrecord-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"storyrecord-title\",\n      children: \"\\uC2A4\\uD1A0\\uB9AC \\uAE30\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: title,\n      onChange: handleTitleChange,\n      className: \"title-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `map-container ${isSpotAdding ? 'spot-adding' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(KakaoMap, {\n        isSpotAdding: isSpotAdding,\n        markers: markers,\n        setMarkers: setMarkers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), isSpotAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spot-adding-notice\",\n      children: \"Spot \\uCD94\\uAC00 \\uBAA8\\uB4DC\\uAC00 \\uD65C\\uC131\\uD654\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uC9C0\\uB3C4\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC Spot\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSpotAdding,\n      className: `toggle-spot-button ${isSpotAdding ? 'active' : ''}`,\n      children: isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: `썸네일 ${index + 1}`,\n        className: \"image-preview\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg\",\n        multiple: true,\n        onChange: handleFileChange,\n        id: \"fileUpload\",\n        className: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileUpload\",\n        className: \"upload-label\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694... \",\n      value: memo,\n      onChange: handleMemoChange,\n      className: \"memo-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preference-container\",\n      children: [1, 2, 3].map(level => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handlePreferenceChange(level),\n        className: `preference-icon ${preference >= level ? 'active' : ''}`,\n        children: preference >= level ? '❤️' : '♡'\n      }, level, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"recommended-keywords-title\",\n      children: \"\\uCD94\\uCC9C \\uD0A4\\uC6CC\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommended-keywords-container\",\n      children: recommendedKeywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommended-keyword\",\n        onClick: () => addRecommendedKeyword(keyword),\n        children: keyword\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD574\\uC2DC\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: hashtagInput,\n      onChange: handleHashtagChange,\n      onKeyPress: handleHashtagKeyPress,\n      className: \"hashtag-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hashtag-container\",\n      children: hashtags.map((hashtag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hashtag\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `#${hashtag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeHashtag(index),\n          className: \"hashtag-remove\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"saved-spot-title\",\n      children: \"\\uC800\\uC7A5\\uB41C Spot \\uC815\\uBCF4:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: isDroppableLoaded && /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-markers\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"marker-list\",\n          children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `marker-${index}`,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"marker-item\",\n              children: [\"\\uC7A5\\uC18C \", index + 1, \" - \", marker.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 23\n            }, this)\n          }, `marker-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryRecord, \"Z3ZZfrnyRVFP5T3qq77SSp+pNRU=\", false, function () {\n  return [useNavigate];\n});\n_c = StoryRecord;\nexport default StoryRecord;\nvar _c;\n$RefreshReg$(_c, \"StoryRecord\");","map":{"version":3,"names":["React","useState","useEffect","useRef","KakaoMap","extractExifData","getAddressFromCoords","DragDropContext","Droppable","Draggable","useNavigate","FooterNav","axios","tf","cocoSsd","jsxDEV","_jsxDEV","StoryRecord","_s","title","setTitle","memo","setMemo","selectedFiles","setSelectedFiles","imagePreviews","setImagePreviews","preference","setPreference","hashtagInput","setHashtagInput","hashtags","setHashtags","recommendedKeywords","setRecommendedKeywords","isSpotAdding","setIsSpotAdding","markers","setMarkers","addresses","setAddresses","isDroppableLoaded","setIsDroppableLoaded","model","setModel","navigate","isUpdatingKeywords","detectedLabelsSet","Set","loadModel","loadedModel","load","length","handleFileChange","e","files","Array","from","target","filter","file","type","map","URL","createObjectURL","forEach","addMarkerFromExif","detectObjectsInImage","data","latitude","longitude","address","newMarker","lat","lng","date","dateTime","prevMarkers","prevAddresses","console","error","img","Image","src","onload","predictions","detect","log","recommendKeywordsFromChatGPT","slice","newLabels","prediction","class","label","current","has","add","recommendKeywordsFromLabel","response","post","messages","role","content","max_tokens","n","stop","temperature","headers","Authorization","process","env","REACT_APP_CHATGPT_API_KEY","chatGPTKeywords","choices","message","split","kw","trim","replace","prevKeywords","handleTitleChange","value","handleMemoChange","handlePreferenceChange","newPreference","handleHashtagChange","handleHashtagKeyPress","key","addRecommendedKeyword","keyword","cleanedKeyword","formattedKeyword","includes","removeHashtag","indexToRemove","_","index","toggleSpotAdding","handleSubmit","onDragEnd","result","destination","updatedMarkers","reorderedMarker","splice","source","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","preview","alt","accept","multiple","id","htmlFor","level","onKeyPress","hashtag","droppableId","provided","droppableProps","ref","innerRef","marker","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\n\nconst StoryRecord = () => {\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [isDroppableLoaded, setIsDroppableLoaded] = useState(false);\n  const [model, setModel] = useState(null);\n  const navigate = useNavigate();\n  const isUpdatingKeywords = useRef(false);\n  const detectedLabelsSet = useRef(new Set());\n\n  useEffect(() => {\n    const loadModel = async () => {\n      const loadedModel = await cocoSsd.load();\n      setModel(loadedModel);\n    };\n    loadModel();\n  }, []);\n\n  useEffect(() => {\n    if (markers.length > 0) {\n      setIsDroppableLoaded(true);\n    }\n  }, [markers]);\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files).filter((file) => file.type === 'image/jpeg');\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map((file) => URL.createObjectURL(file))]);\n      files.forEach((file) => extractExifData(file, addMarkerFromExif));\n      files.forEach((file) => detectObjectsInImage(file));\n    }\n  };\n\n  const addMarkerFromExif = (data) => {\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, (address) => {\n        const newMarker = { lat: data.latitude, lng: data.longitude, date: data.dateTime, address };\n        setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\n        setAddresses((prevAddresses) => [...prevAddresses, address]);\n      });\n    }\n  };\n\n  // 이미지에서 객체를 감지하는 함수\n  const detectObjectsInImage = async (file) => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        if (predictions.length === 0) {\n          // 객체가 없는 경우 ChatGPT API를 사용하여 키워드 추천\n          console.log('객체가 없음: 배경 이미지로 간주하여 ChatGPT에 요청합니다.');\n          await recommendKeywordsFromChatGPT(file);\n        } else {\n          predictions = predictions.slice(0, 2); // 최대 2개의 객체만 탐지\n          const newLabels = predictions\n            .map((prediction) => prediction.class)\n            .filter((label) => !detectedLabelsSet.current.has(label));\n\n          newLabels.forEach((label) => detectedLabelsSet.current.add(label));\n\n          console.log(\"감지된 객체:\", newLabels);\n\n          // ChatGPT API를 이용해 추가적인 키워드 추천\n          for (const label of newLabels) {\n            await recommendKeywordsFromLabel(label);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n  };\n\n  // ChatGPT API를 사용하여 객체 라벨 기반 키워드 추천\n  const recommendKeywordsFromLabel = async (label) => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-4',\n          messages: [\n            {\n              role: 'user',\n              content: `\n              \"당신은 재미있고 유행하는 키워드를 추천하는 어시스턴트입니다. 사용자가 이미지에서 특정 객체를 감지하면, 해당 객체 '${label}'와 관련된 한국어 해시태그 키워드 3개를 추천합니다. 예를 들어, '케이크'를 감지하면 '카페', '케이크맛집', '데이트장소'와 같은 사람들이 자주 사용하는 재미있고 유용한 단어를 제공합니다. 각 단어는 쉼표로 구분하여 한 줄로 작성하세요.\"\n              `\n            }\n          ],\n          max_tokens: 50,\n          n: 1,\n          stop: null,\n          temperature: 0.7,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      const chatGPTKeywords = response.data.choices[0].message.content\n        .split(',')\n        .map((kw) => kw.trim().replace(/^#+/, '')) // 모든 기존 해시태그 제거\n        .filter((kw) => kw !== '' && kw !== '\"'); // 빈 문자열 및 따옴표 제거\n      \n      setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n\n  // ChatGPT API를 사용하여 배경 이미지 기반 키워드 추천\n  const recommendKeywordsFromChatGPT = async (file) => {\n    if (isUpdatingKeywords.current) return;\n    isUpdatingKeywords.current = true;\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-4',\n          messages: [\n            {\n              role: 'user',\n              content: `\n              \"이미지에서 감지된 객체가 없는 경우, 사용자가 제공한 배경 이미지에 대해 한국어로 적절한 해시태그 키워드 3개를 추천합니다. 예를 들어, 자연 풍경 이미지를 보면 '힐링', '자연여행', '풍경사진'과 같은 사람들이 자주 사용하는 단어를 제공합니다. 각 단어는 쉼표로 구분하여 한 줄로 작성하세요.\"\n              `\n            }\n          ],\n          max_tokens: 50,\n          n: 1,\n          stop: null,\n          temperature: 0.7,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_CHATGPT_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      const chatGPTKeywords = response.data.choices[0].message.content\n        .split(',')\n        .map((kw) => kw.trim().replace(/^#+/, '')) // 모든 기존 해시태그 제거\n        .filter((kw) => kw !== '' && kw !== '\"' && kw !== '\\''); // 빈 문자열 및 따옴표 제거\n      \n      setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...chatGPTKeywords]);\n    } catch (error) {\n      console.error('배경 이미지 키워드 추천 중 오류 발생:', error);\n    } finally {\n      isUpdatingKeywords.current = false;\n    }\n  };\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const handleMemoChange = (e) => setMemo(e.target.value);\n  const handlePreferenceChange = (newPreference) => setPreference(newPreference);\n  const handleHashtagChange = (e) => setHashtagInput(e.target.value);\n\n  const handleHashtagKeyPress = (e) => {\n    if (e.key === 'Enter' && hashtagInput.trim() !== '') {\n      setHashtags([...hashtags, hashtagInput.trim()]);\n      setHashtagInput('');\n    }\n  };\n\n  const addRecommendedKeyword = (keyword) => {\n    const cleanedKeyword = keyword.replace(/^#+/, '').trim();\n    const formattedKeyword = `${cleanedKeyword}`;\n  \n    if (!hashtags.includes(formattedKeyword)) {\n      setHashtags([...hashtags, formattedKeyword]);\n    }\n  };\n  \n  const removeHashtag = (indexToRemove) => setHashtags(hashtags.filter((_, index) => index !== indexToRemove));\n  const toggleSpotAdding = () => setIsSpotAdding(!isSpotAdding);\n\n  const handleSubmit = () => {\n    console.log({ title, selectedFiles, memo, preference, hashtags, markers, addresses });\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const updatedMarkers = Array.from(markers);\n    const [reorderedMarker] = updatedMarkers.splice(result.source.index, 1);\n    updatedMarkers.splice(result.destination.index, 0, reorderedMarker);\n    setMarkers(updatedMarkers);\n  };\n\n  return (\n    <div className=\"storyrecord-container\">\n      <h1 className=\"storyrecord-title\">스토리 기록하기</h1>\n      <input\n        type=\"text\"\n        placeholder=\"제목을 입력하세요\"\n        value={title}\n        onChange={handleTitleChange}\n        className=\"title-input\"\n      />\n      <div className={`map-container ${isSpotAdding ? 'spot-adding' : ''}`}>\n        <KakaoMap isSpotAdding={isSpotAdding} markers={markers} setMarkers={setMarkers} />\n      </div>\n      {isSpotAdding && (\n        <div className=\"spot-adding-notice\">Spot 추가 모드가 활성화되었습니다. 지도를 클릭하여 Spot을 추가하세요.</div>\n      )}\n      <button onClick={toggleSpotAdding} className={`toggle-spot-button ${isSpotAdding ? 'active' : ''}`}>\n        {isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'}\n      </button>\n      <div className=\"image-preview-container\">\n        {imagePreviews.map((preview, index) => (\n          <img key={index} src={preview} alt={`썸네일 ${index + 1}`} className=\"image-preview\" />\n        ))}\n        <input\n          type=\"file\"\n          accept=\"image/jpeg\"\n          multiple\n          onChange={handleFileChange}\n          id=\"fileUpload\"\n          className=\"file-upload\"\n        />\n        <label htmlFor=\"fileUpload\" className=\"upload-label\">\n          +\n        </label>\n      </div>\n      <textarea\n        placeholder=\"메모를 입력하세요... \"\n        value={memo}\n        onChange={handleMemoChange}\n        className=\"memo-textarea\"\n      />\n      <div className=\"preference-container\">\n        {[1, 2, 3].map((level) => (\n          <span\n            key={level}\n            onClick={() => handlePreferenceChange(level)}\n            className={`preference-icon ${preference >= level ? 'active' : ''}`}\n          >\n            {preference >= level ? '❤️' : '♡'}\n          </span>\n        ))}\n      </div>\n\n      {/* 추천 키워드 섹션 */}\n      <h3 className=\"recommended-keywords-title\">추천 키워드</h3>\n      <div className=\"recommended-keywords-container\">\n        {recommendedKeywords.map((keyword, index) => (\n          <div key={index} className=\"recommended-keyword\" onClick={() => addRecommendedKeyword(keyword)}>\n            {keyword}\n          </div>\n        ))}\n      </div>\n\n      <input\n        type=\"text\"\n        placeholder=\"해시태그를 입력하세요\"\n        value={hashtagInput}\n        onChange={handleHashtagChange}\n        onKeyPress={handleHashtagKeyPress}\n        className=\"hashtag-input\"\n      />\n      <div className=\"hashtag-container\">\n        {hashtags.map((hashtag, index) => (\n          <div key={index} className=\"hashtag\">\n            <span>{`#${hashtag}`}</span>\n            <button onClick={() => removeHashtag(index)} className=\"hashtag-remove\">\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleSubmit} className=\"submit-button\">\n        완료\n      </button>\n      <h3 className=\"saved-spot-title\">저장된 Spot 정보:</h3>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {isDroppableLoaded && (\n          <Droppable droppableId=\"droppable-markers\">\n            {(provided) => (\n              <ul {...provided.droppableProps} ref={provided.innerRef} className=\"marker-list\">\n                {markers.map((marker, index) => (\n                  <Draggable key={`marker-${index}`} draggableId={`marker-${index}`} index={index}>\n                    {(provided) => (\n                      <li\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className=\"marker-item\"\n                      >\n                        장소 {index + 1} - {marker.address}\n                      </li>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        )}\n      </DragDropContext>\n      <FooterNav />\n    </div>\n  );\n};\n\nexport default StoryRecord;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}