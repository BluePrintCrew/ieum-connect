{"ast":null,"code":"var _jsxFileName = \"/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport { recommendKeywordsFromLabel, recommendKeywordsFromChatGPT } from '../function/keywordRecommender';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryRecord = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [model, setModel] = useState(null);\n  const [visibility, setVisibility] = useState('PUBLIC');\n  const navigate = useNavigate();\n  const detectedLabelsSet = useRef(new Set());\n  useEffect(() => {\n    const loadModel = async () => {\n      try {\n        const loadedModel = await cocoSsd.load();\n        setModel(loadedModel);\n        console.log('모델이 로드되었습니다.');\n      } catch (error) {\n        console.error('모델 로드 중 오류 발생:', error);\n      }\n    };\n    loadModel();\n  }, []);\n  const handleFileChange = async e => {\n    const files = Array.from(e.target.files).filter(file => file.type === 'image/jpeg' || file.type === 'image/png');\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map(file => URL.createObjectURL(file))]);\n      files.forEach(file => {\n        processImage(file);\n      });\n    }\n  };\n  const processImage = async file => {\n    try {\n      await extractExifData(file, addMarkerFromExif);\n    } catch (error) {\n      console.error('EXIF 데이터 추출 중 오류 발생:', error);\n    }\n    detectObjectsInImage(file);\n  };\n  const addMarkerFromExif = data => {\n    console.log('EXIF 데이터:', data);\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, address => {\n        const newMarker = {\n          lat: data.latitude,\n          lng: data.longitude,\n          date: data.dateTime,\n          address\n        };\n        setMarkers(prevMarkers => [...prevMarkers, newMarker]);\n        setAddresses(prevAddresses => [...prevAddresses, address]);\n      });\n    } else {\n      console.warn('위도 및 경도 정보가 없습니다. EXIF 데이터:', data);\n    }\n  };\n  const detectObjectsInImage = async file => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        console.log('탐지된 객체:', predictions);\n        if (predictions.length === 0) {\n          const keywords = await recommendKeywordsFromChatGPT();\n          setRecommendedKeywords(prevKeywords => [...prevKeywords, ...keywords]);\n        } else {\n          predictions = predictions.slice(0, 2);\n          const newLabels = predictions.map(prediction => prediction.class).filter(label => !detectedLabelsSet.current.has(label));\n          newLabels.forEach(label => detectedLabelsSet.current.add(label));\n          for (const label of newLabels) {\n            const keywords = await recommendKeywordsFromLabel(label);\n            setRecommendedKeywords(prevKeywords => [...prevKeywords, ...keywords]);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n    img.onerror = error => {\n      console.error('이미지 로드 중 오류 발생:', error);\n    };\n  };\n  const handleTitleChange = e => setTitle(e.target.value);\n  const handleMemoChange = e => setMemo(e.target.value);\n  const handlePreferenceChange = newPreference => setPreference(newPreference);\n  const handleHashtagChange = e => setHashtagInput(e.target.value);\n  const handleHashtagKeyPress = e => {\n    if (e.key === 'Enter' && hashtagInput.trim() !== '') {\n      setHashtags([...hashtags, hashtagInput.trim()]);\n      setHashtagInput('');\n    }\n  };\n  const addRecommendedKeyword = keyword => {\n    const cleanedKeyword = keyword.replace(/^#+/, '').trim();\n    if (!hashtags.includes(cleanedKeyword)) {\n      setHashtags([...hashtags, cleanedKeyword]);\n    }\n  };\n  const removeHashtag = indexToRemove => setHashtags(hashtags.filter((_, index) => index !== indexToRemove));\n  const toggleSpotAdding = () => setIsSpotAdding(!isSpotAdding);\n  const convertMarkersToRoutePoints = () => {\n    return markers.map((marker, index) => ({\n      latitude: marker.lat,\n      longitude: marker.lng,\n      orderNum: index + 1\n    }));\n  };\n  const handleSubmit = async () => {\n    if (!title.trim() || !memo.trim()) {\n      alert('제목과 메모는 필수 입력 사항입니다.');\n      return;\n    }\n    if (selectedFiles.length === 0) {\n      alert('이미지를 하나 이상 업로드해야 합니다.');\n      return;\n    }\n    if (markers.length === 0) {\n      alert('경로에 최소 하나 이상의 스팟이 필요합니다.');\n      return;\n    }\n    const routePoints = convertMarkersToRoutePoints();\n    const storyInfo = {\n      title: title.trim(),\n      memo: memo.trim(),\n      preference,\n      visibility,\n      hashtags: hashtags.filter(Boolean),\n      routePoints\n    };\n    const formData = new FormData();\n    formData.append('storyInfo', new Blob([JSON.stringify(storyInfo)], {\n      type: 'application/json'\n    }));\n    selectedFiles.forEach(file => {\n      formData.append('images', file);\n    });\n    try {\n      const response = await axios.post('http://localhost:8080/api/stories', formData);\n      if (response.status === 200) {\n        console.log('스토리 생성 성공:', response.data);\n        navigate('/stories');\n      } else {\n        console.error('예상치 못한 응답:', response);\n      }\n    } catch (error) {\n      console.error('스토리 제출 중 오류 발생:', error);\n      if (error.response && error.response.data) {\n        console.error('서버 응답 메시지:', error.response.data);\n      }\n    }\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const updatedMarkers = Array.from(markers);\n    const [reorderedMarker] = updatedMarkers.splice(result.source.index, 1);\n    updatedMarkers.splice(result.destination.index, 0, reorderedMarker);\n    setMarkers(updatedMarkers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storyrecord-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"storyrecord-title\",\n      children: \"\\uC2A4\\uD1A0\\uB9AC \\uAE30\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: title,\n      onChange: handleTitleChange,\n      className: \"title-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visibility-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uACF5\\uAC1C \\uBC94\\uC704:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: visibility,\n          onChange: e => setVisibility(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"\\uC804\\uCCB4 \\uACF5\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"FRIENDS_ONLY\",\n            children: \"\\uCE5C\\uAD6C\\uC5D0\\uAC8C\\uB9CC \\uACF5\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"\\uBE44\\uACF5\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `map-container ${isSpotAdding ? 'spot-adding' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(KakaoMap, {\n        isSpotAdding: isSpotAdding,\n        markers: markers,\n        setMarkers: setMarkers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), isSpotAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spot-adding-notice\",\n      children: \"Spot \\uCD94\\uAC00 \\uBAA8\\uB4DC\\uAC00 \\uD65C\\uC131\\uD654\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uC9C0\\uB3C4\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC Spot\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSpotAdding,\n      className: `toggle-spot-button ${isSpotAdding ? 'active' : ''}`,\n      children: isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [imagePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: `썸네일 ${index + 1}`,\n        className: \"image-preview\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg,image/png\",\n        multiple: true,\n        onChange: handleFileChange,\n        id: \"fileUpload\",\n        className: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileUpload\",\n        className: \"upload-label\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694... \",\n      value: memo,\n      onChange: handleMemoChange,\n      className: \"memo-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preference-container\",\n      children: [1, 2, 3].map(level => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handlePreferenceChange(level),\n        className: `preference-icon ${preference >= level ? 'active' : ''}`,\n        children: preference >= level ? '❤️' : '♡'\n      }, level, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"recommended-keywords-title\",\n      children: \"\\uCD94\\uCC9C \\uD0A4\\uC6CC\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommended-keywords-container\",\n      children: recommendedKeywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommended-keyword\",\n        onClick: () => addRecommendedKeyword(keyword),\n        children: keyword\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD574\\uC2DC\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: hashtagInput,\n      onChange: handleHashtagChange,\n      onKeyPress: handleHashtagKeyPress,\n      className: \"hashtag-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hashtag-container\",\n      children: hashtags.map((hashtag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hashtag\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `#${hashtag}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeHashtag(index),\n          className: \"hashtag-remove\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"saved-spot-title\",\n      children: \"\\uC800\\uC7A5\\uB41C Spot \\uC815\\uBCF4:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-markers\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"marker-list\",\n          children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `marker-${index}`,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"marker-item\",\n              children: [\"\\uC7A5\\uC18C \", index + 1, \" - \", marker.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this)\n          }, `marker-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryRecord, \"OCfFIM3KesVn8PSAlakyX+8SY+M=\", false, function () {\n  return [useNavigate];\n});\n_c = StoryRecord;\nexport default StoryRecord;\nvar _c;\n$RefreshReg$(_c, \"StoryRecord\");","map":{"version":3,"names":["React","useState","useEffect","useRef","KakaoMap","extractExifData","getAddressFromCoords","DragDropContext","Droppable","Draggable","useNavigate","FooterNav","axios","tf","cocoSsd","recommendKeywordsFromLabel","recommendKeywordsFromChatGPT","jsxDEV","_jsxDEV","StoryRecord","_s","title","setTitle","memo","setMemo","selectedFiles","setSelectedFiles","imagePreviews","setImagePreviews","preference","setPreference","hashtagInput","setHashtagInput","hashtags","setHashtags","recommendedKeywords","setRecommendedKeywords","isSpotAdding","setIsSpotAdding","markers","setMarkers","addresses","setAddresses","model","setModel","visibility","setVisibility","navigate","detectedLabelsSet","Set","loadModel","loadedModel","load","console","log","error","handleFileChange","e","files","Array","from","target","filter","file","type","length","map","URL","createObjectURL","forEach","processImage","addMarkerFromExif","detectObjectsInImage","data","latitude","longitude","address","newMarker","lat","lng","date","dateTime","prevMarkers","prevAddresses","warn","img","Image","src","onload","predictions","detect","keywords","prevKeywords","slice","newLabels","prediction","class","label","current","has","add","onerror","handleTitleChange","value","handleMemoChange","handlePreferenceChange","newPreference","handleHashtagChange","handleHashtagKeyPress","key","trim","addRecommendedKeyword","keyword","cleanedKeyword","replace","includes","removeHashtag","indexToRemove","_","index","toggleSpotAdding","convertMarkersToRoutePoints","marker","orderNum","handleSubmit","alert","routePoints","storyInfo","Boolean","formData","FormData","append","Blob","JSON","stringify","response","post","status","onDragEnd","result","destination","updatedMarkers","reorderedMarker","splice","source","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","preview","alt","accept","multiple","id","htmlFor","level","onKeyPress","hashtag","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/son-yeonghyeon/Desktop/ieum-connect/ieum-connect/frontend/src/components/StoryRecord.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport KakaoMap from '../Kakao/KakaoMap';\nimport { extractExifData } from '../function/exif';\nimport { getAddressFromCoords } from '../function/kakaoGeocoder';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../storyrecord.css';\nimport { useNavigate } from 'react-router-dom';\nimport FooterNav from './Footernav';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport { recommendKeywordsFromLabel, recommendKeywordsFromChatGPT } from '../function/keywordRecommender';\n\nconst StoryRecord = () => {\n  const [title, setTitle] = useState('');\n  const [memo, setMemo] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [preference, setPreference] = useState(0);\n  const [hashtagInput, setHashtagInput] = useState('');\n  const [hashtags, setHashtags] = useState([]);\n  const [recommendedKeywords, setRecommendedKeywords] = useState([]);\n  const [isSpotAdding, setIsSpotAdding] = useState(false);\n  const [markers, setMarkers] = useState([]);\n  const [addresses, setAddresses] = useState([]);\n  const [model, setModel] = useState(null);\n  const [visibility, setVisibility] = useState('PUBLIC');\n  const navigate = useNavigate();\n  const detectedLabelsSet = useRef(new Set());\n\n  useEffect(() => {\n    const loadModel = async () => {\n      try {\n        const loadedModel = await cocoSsd.load();\n        setModel(loadedModel);\n        console.log('모델이 로드되었습니다.');\n      } catch (error) {\n        console.error('모델 로드 중 오류 발생:', error);\n      }\n    };\n    loadModel();\n  }, []);\n\n  const handleFileChange = async (e) => {\n    const files = Array.from(e.target.files).filter(\n      (file) => file.type === 'image/jpeg' || file.type === 'image/png'\n    );\n    if (files.length > 0) {\n      setSelectedFiles([...selectedFiles, ...files]);\n      setImagePreviews([...imagePreviews, ...files.map((file) => URL.createObjectURL(file))]);\n      files.forEach((file) => {\n        processImage(file);\n      });\n    }\n  };\n\n  const processImage = async (file) => {\n    try {\n      await extractExifData(file, addMarkerFromExif);\n    } catch (error) {\n      console.error('EXIF 데이터 추출 중 오류 발생:', error);\n    }\n    detectObjectsInImage(file);\n  };\n\n  const addMarkerFromExif = (data) => {\n    console.log('EXIF 데이터:', data);\n    if (data && data.latitude && data.longitude) {\n      getAddressFromCoords(data.latitude, data.longitude, (address) => {\n        const newMarker = {\n          lat: data.latitude,\n          lng: data.longitude,\n          date: data.dateTime,\n          address,\n        };\n        setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\n        setAddresses((prevAddresses) => [...prevAddresses, address]);\n      });\n    } else {\n      console.warn('위도 및 경도 정보가 없습니다. EXIF 데이터:', data);\n    }\n  };\n\n  const detectObjectsInImage = async (file) => {\n    if (!model) {\n      console.error('모델이 아직 로드되지 않았습니다.');\n      return;\n    }\n\n    const img = new Image();\n    img.src = URL.createObjectURL(file);\n\n    img.onload = async () => {\n      try {\n        let predictions = await model.detect(img);\n        console.log('탐지된 객체:', predictions);\n        if (predictions.length === 0) {\n          const keywords = await recommendKeywordsFromChatGPT();\n          setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...keywords]);\n        } else {\n          predictions = predictions.slice(0, 2);\n          const newLabels = predictions\n            .map((prediction) => prediction.class)\n            .filter((label) => !detectedLabelsSet.current.has(label));\n\n          newLabels.forEach((label) => detectedLabelsSet.current.add(label));\n\n          for (const label of newLabels) {\n            const keywords = await recommendKeywordsFromLabel(label);\n            setRecommendedKeywords((prevKeywords) => [...prevKeywords, ...keywords]);\n          }\n        }\n      } catch (error) {\n        console.error('객체 감지 중 오류 발생:', error);\n      }\n    };\n\n    img.onerror = (error) => {\n      console.error('이미지 로드 중 오류 발생:', error);\n    };\n  };\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const handleMemoChange = (e) => setMemo(e.target.value);\n  const handlePreferenceChange = (newPreference) => setPreference(newPreference);\n  const handleHashtagChange = (e) => setHashtagInput(e.target.value);\n\n  const handleHashtagKeyPress = (e) => {\n    if (e.key === 'Enter' && hashtagInput.trim() !== '') {\n      setHashtags([...hashtags, hashtagInput.trim()]);\n      setHashtagInput('');\n    }\n  };\n\n  const addRecommendedKeyword = (keyword) => {\n    const cleanedKeyword = keyword.replace(/^#+/, '').trim();\n    if (!hashtags.includes(cleanedKeyword)) {\n      setHashtags([...hashtags, cleanedKeyword]);\n    }\n  };\n\n  const removeHashtag = (indexToRemove) =>\n    setHashtags(hashtags.filter((_, index) => index !== indexToRemove));\n  const toggleSpotAdding = () => setIsSpotAdding(!isSpotAdding);\n\n  const convertMarkersToRoutePoints = () => {\n    return markers.map((marker, index) => ({\n      latitude: marker.lat,\n      longitude: marker.lng,\n      orderNum: index + 1,\n    }));\n  };\n\n  const handleSubmit = async () => {\n    if (!title.trim() || !memo.trim()) {\n      alert('제목과 메모는 필수 입력 사항입니다.');\n      return;\n    }\n    if (selectedFiles.length === 0) {\n      alert('이미지를 하나 이상 업로드해야 합니다.');\n      return;\n    }\n    if (markers.length === 0) {\n      alert('경로에 최소 하나 이상의 스팟이 필요합니다.');\n      return;\n    }\n\n    const routePoints = convertMarkersToRoutePoints();\n    const storyInfo = {\n      title: title.trim(),\n      memo: memo.trim(),\n      preference,\n      visibility,\n      hashtags: hashtags.filter(Boolean),\n      routePoints,\n    };\n\n    const formData = new FormData();\n    formData.append('storyInfo', new Blob([JSON.stringify(storyInfo)], { type: 'application/json' }));\n    selectedFiles.forEach((file) => {\n      formData.append('images', file);\n    });\n\n    try {\n      const response = await axios.post('http://localhost:8080/api/stories', formData);\n      if (response.status === 200) {\n        console.log('스토리 생성 성공:', response.data);\n        navigate('/stories');\n      } else {\n        console.error('예상치 못한 응답:', response);\n      }\n    } catch (error) {\n      console.error('스토리 제출 중 오류 발생:', error);\n      if (error.response && error.response.data) {\n        console.error('서버 응답 메시지:', error.response.data);\n      }\n    }\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const updatedMarkers = Array.from(markers);\n    const [reorderedMarker] = updatedMarkers.splice(result.source.index, 1);\n    updatedMarkers.splice(result.destination.index, 0, reorderedMarker);\n    setMarkers(updatedMarkers);\n  };\n\n  return (\n    <div className=\"storyrecord-container\">\n      <h1 className=\"storyrecord-title\">스토리 기록하기</h1>\n      <input\n        type=\"text\"\n        placeholder=\"제목을 입력하세요\"\n        value={title}\n        onChange={handleTitleChange}\n        className=\"title-input\"\n      />\n      <div className=\"visibility-container\">\n        <label>\n          공개 범위:\n          <select value={visibility} onChange={(e) => setVisibility(e.target.value)}>\n            <option value=\"PUBLIC\">전체 공개</option>\n            <option value=\"FRIENDS_ONLY\">친구에게만 공개</option>\n            <option value=\"PRIVATE\">비공개</option>\n          </select>\n        </label>\n      </div>\n      <div className={`map-container ${isSpotAdding ? 'spot-adding' : ''}`}>\n        <KakaoMap isSpotAdding={isSpotAdding} markers={markers} setMarkers={setMarkers} />\n      </div>\n      {isSpotAdding && (\n        <div className=\"spot-adding-notice\">\n          Spot 추가 모드가 활성화되었습니다. 지도를 클릭하여 Spot을 추가하세요.\n        </div>\n      )}\n      <button\n        onClick={toggleSpotAdding}\n        className={`toggle-spot-button ${isSpotAdding ? 'active' : ''}`}\n      >\n        {isSpotAdding ? 'Spot 추가 모드 끄기' : 'Spot 추가 모드 켜기'}\n      </button>\n      <div className=\"image-preview-container\">\n        {imagePreviews.map((preview, index) => (\n          <img key={index} src={preview} alt={`썸네일 ${index + 1}`} className=\"image-preview\" />\n        ))}\n        <input\n          type=\"file\"\n          accept=\"image/jpeg,image/png\"\n          multiple\n          onChange={handleFileChange}\n          id=\"fileUpload\"\n          className=\"file-upload\"\n        />\n        <label htmlFor=\"fileUpload\" className=\"upload-label\">\n          +\n        </label>\n      </div>\n      <textarea\n        placeholder=\"메모를 입력하세요... \"\n        value={memo}\n        onChange={handleMemoChange}\n        className=\"memo-textarea\"\n      />\n      <div className=\"preference-container\">\n        {[1, 2, 3].map((level) => (\n          <span\n            key={level}\n            onClick={() => handlePreferenceChange(level)}\n            className={`preference-icon ${preference >= level ? 'active' : ''}`}\n          >\n            {preference >= level ? '❤️' : '♡'}\n          </span>\n        ))}\n      </div>\n      <h3 className=\"recommended-keywords-title\">추천 키워드</h3>\n      <div className=\"recommended-keywords-container\">\n        {recommendedKeywords.map((keyword, index) => (\n          <div key={index} className=\"recommended-keyword\" onClick={() => addRecommendedKeyword(keyword)}>\n            {keyword}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"해시태그를 입력하세요\"\n        value={hashtagInput}\n        onChange={handleHashtagChange}\n        onKeyPress={handleHashtagKeyPress}\n        className=\"hashtag-input\"\n      />\n      <div className=\"hashtag-container\">\n        {hashtags.map((hashtag, index) => (\n          <div key={index} className=\"hashtag\">\n            <span>{`#${hashtag}`}</span>\n            <button onClick={() => removeHashtag(index)} className=\"hashtag-remove\">\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleSubmit} className=\"submit-button\">\n        완료\n      </button>\n      <h3 className=\"saved-spot-title\">저장된 Spot 정보:</h3>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable-markers\">\n          {(provided) => (\n            <ul {...provided.droppableProps} ref={provided.innerRef} className=\"marker-list\">\n              {markers.map((marker, index) => (\n                <Draggable key={`marker-${index}`} draggableId={`marker-${index}`} index={index}>\n                  {(provided) => (\n                    <li\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className=\"marker-item\"\n                    >\n                      장소 {index + 1} - {marker.address}\n                    </li>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <FooterNav />\n    </div>\n  );\n};\n\nexport default StoryRecord;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}